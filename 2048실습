<html lang="en">
<head>
    <title>2048 실습</title>
    <link rel="stylesheet" href="wow.css" type="text/css">
</head>
<body>
    <script src="https://unpkg.com/vue@3"></script>

    <style>
        #app{
            width: 550px;
            height: 600px;
            background-color: beige;
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr;
            grid-template-rows: 1fr 1fr 1fr 1fr;
            grid-gap: 10px;
            padding : 10px;           
            bottom: 80;
        }
        .backblock{            
            background-color: burlywood;
        }
    </style>

    <div id="app">
        <div class="backblock" v-for="index in backblocks"></div>        
        <div class="backblock" v-for="index in backblocks">{{index}}</div>        
        <div class="blockPrefab">2</div>        
    </div>


    <script type="text/javascript" src="keyboard.js"></script>

    <script type="text/javascript">
        const {createApp} = Vue;
        createApp({
            data() {
                return {                    
                    backblocks : 16,
                }
            },
            mounted(){
                console.log("app 마운트 성공!");
            },
        }).mount("#app");
    </script>    

    </script>
</body>
</html>




css

#app{
    position: relative;
    width: 590px;
    height: 590px;
    background-color: beige;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    grid-gap: 10px;
    padding : 10px;     
    border-radius: 20px;      
}
.backblock{            
    background-color: burlywood;
    text-align: center;   
    line-height: 1.8;
    font-size: 70;
    font-family: cursive;
    border-radius: 20px;
}
.blockPrefab{
    position: absolute;
    left: 20;
    top: 85;
    width: 110;
    height: 110;
    background-color: brown;
    text-align: center;            
    line-height: 1.6;
    font-size: 70;
    font-family: cursive;
    border-radius: 20px;
}




js


function keyArrowRight(){
    console.log("Right Pressed.");
    let blocks = document.getElementsByClassName("blockPrefab");
    for (let i = 0; i < blocks.length; i++){
        blocks[i].style.left = 20;
        console.log(blocks[i].style.left);
        if(blocks[i].style.left == '20px')
        {
            var a = blocks[i].style.left;
            a = Number(a.replace(/px$/, ''));
            console.log(a);
            a += 420;
            console.log(a);
            blocks[i].style.left = a; 
        }       
    }
}

function keyArrowLeft(){
    console.log("Left Pressed.");
    let blocks = document.getElementsByClassName("blockPrefab");
    for (let i = 0; i < blocks.length; i++){
        blocks[i].style.left = 20;  
    }
}
function keyArrowUp(){
    console.log("Up Pressed.");
    let blocks = document.getElementsByClassName("blockPrefab");
    for (let i = 0; i < blocks.length; i++){
        blocks[i].style.top = 85;        
    }
}
function keyArrowDown(){
    console.log("Down Pressed.");
    let blocks = document.getElementsByClassName("blockPrefab");
    for (let i = 0; i < blocks.length; i++){
        blocks[i].style.top = 490;        
    }
}

function keylog(e){
    console.log(e.key);
    switch(e.key){
        case 'ArrowRight':
            keyArrowRight();
            break;
        case 'ArrowLeft':
            keyArrowLeft();
            break;
        case 'ArrowUp':
            keyArrowUp();
            break;
        case 'ArrowDown':
            keyArrowDown();
            break;
        default:
            break;
    }
}

window.onkeydown = keylog;
